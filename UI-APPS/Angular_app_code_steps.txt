ng g class entities/student --skip-tests
ng g c components/student-add --skip-tests
ng g c components/student-list --skip-tests
ng g s services/student --skip-tests
=============================================================
------app.module.ts------------------------------------------
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule } from '@angular/common/http';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { StudentAddComponent } from './components/student-add/student-add.component';
import { StudentListComponent } from './components/student-list/student-list.component';

@NgModule({
  declarations: [
    AppComponent,
    StudentAddComponent,
    StudentListComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    HttpClientModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
===========================================================
-----------------app-routing.module.ts---------------------
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { StudentAddComponent } from './components/student-add/student-add.component';
import { StudentListComponent } from './components/student-list/student-list.component';

const routes: Routes = [
  { path: 'all', component: StudentListComponent },
  { path: 'create', component: StudentAddComponent },
  { path: '', redirectTo: 'all', pathMatch: 'full' },
  { path: '**', component: StudentListComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }
===========================================================
----------------------app.component.html-------------------
<div class="container">
  <nav class="navbar navbar-expand-lg navbar-light bg-primary">
    <a class="navbar-brand text-white" href="#">R-APP</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
      aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item ">
          <a class="nav-link text-white" href="#" routerLink="/all"> VIEW ALL </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white" href="#" routerLink="/create">REGISRTER</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle text-white" href="#" role="button" data-toggle="dropdown"
            aria-expanded="false">
            Dropdown
          </a>
          <div class="dropdown-menu">
            <a class="dropdown-item" href="#" routerLink="/all">VIEW ALL</a>
            <a class="dropdown-item" href="#" routerLink="/create">REGISTER</a>
          </div>
        </li>
      </ul>
    </div>
  </nav>
  <router-outlet></router-outlet>
</div>
===========================================================
-----------------------student.ts--------------------------
export class Student {
  constructor(
    public stdId: number,
    public stdName: string,
    public stdGen: string,
    public stdCourse: string,
    public stdAddr: string
  ) {}
}

===========================================================
---------------------student.service.ts--------------------
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { Student } from '../entities/student';

@Injectable({
  providedIn: 'root',
})
export class StudentService {
  
  baseUrl = 'http://localhost:9690/v1/api/student';

  constructor(private http: HttpClient) {}

  getAllStudents(): Observable<Student[]> {
    return this.http.get<Student[]>(`${this.baseUrl}/all`);
  }

  createStudent(student: Student): Observable<any> {
    return this.http.post(`${this.baseUrl}/create`, student, {
      responseType: 'text',
    });
  }

  deleteStudent(id: number): Observable<any> {
    return this.http.delete(`${this.baseUrl}/remove/${id}`, {
      responseType : 'text',
    });
  }

  getOneStudent(id: number): Observable<Student> {
    return this.http.get<Student>(`${this.baseUrl}/find/${id}`);
  }

  updateStudent(student: Student): Observable<any> {
    return this.http.put(`${this.baseUrl}/modify`,student);
  }
}
===========================================================
------------student-list.component.ts----------------------
import { Component, OnInit } from '@angular/core';
import { Student } from 'src/app/entities/student';
import { StudentService } from 'src/app/services/student.service';

@Component({
  selector: 'app-student-list',
  templateUrl: './student-list.component.html',
  styleUrls: ['./student-list.component.css'],
})
export class StudentListComponent implements OnInit {
  students: Student[] = [];
  message: any = '';

  constructor(private service: StudentService) {}

  ngOnInit() {
    this.getAllStudents();
  }

  getAllStudents() {
    this.service.getAllStudents().subscribe({
      next: (data) => (this.students = data),
      error: (err) => console.log(err),
      complete: () => console.info('complete'),
    });
  }

  deleteStudent(id: number) {
    this.service.deleteStudent(id).subscribe({
      next: (data) => {
        console.log(data);
        this.message = data;
        this.getAllStudents();
      },
      error: (err) => console.log(err),
      complete: () => console.info('complete'),
    });
  }
}
===========================================================
--------------student-list.component.html------------------
<h3 class="text-center">STUDENTS LIST PAGE</h3>
<table class="table table-hover">
      <tr class="bg-info text-white">
            <th>ID</th>
            <th>NAME</th>
            <th>GENDER</th>
            <th>COURSE</th>
            <th>ADDRESS</th>
            <th>OPERATIONS</th>
      </tr>
      <tr *ngFor="let sob of students">
            <td>{{sob.stdId}}</td>
            <td>{{sob.stdName}}</td>
            <td>{{sob.stdGen}}</td>
            <td>{{sob.stdCourse}}</td>
            <td>{{sob.stdAddr}}</td>
            <td>
                  <button type="button" class="btn btn-danger" (click)="deleteStudent(sob.stdId)">DELETE</button> &nbsp;&nbsp;
                  <button type="button" class="btn btn-warning">EDIT</button>
            </td>
      </tr>
</table>
<div class="text-center"><strong>{{message}}</strong></div>

===========================================================
----------------student-add.component.ts-------------------
import { Component } from '@angular/core';
import { Student } from 'src/app/entities/student';
import { StudentService } from 'src/app/services/student.service';

@Component({
  selector: 'app-student-add',
  templateUrl: './student-add.component.html',
  styleUrls: ['./student-add.component.css'],
})
export class StudentAddComponent {
  student: Student = new Student(0, '', '', '', '');
  message: string = '';

  constructor(private service: StudentService) {}

  createStudent() {
    this.service.createStudent(this.student)
      .subscribe({
        next: (data) => {
          this.message = data;
          this.student = new Student(0, '', '', '', '');
        },
        error: (err) => { console.log(err) },
        complete: () => { console.log('complete') }
    })
  }
}
===========================================================
------------------student-add.component.html---------------
<h3 class="text-center">STUDENTS REGISTER PAGE</h3>
<form (ngSubmit)="createStudent()">
      NAME :
      <input type="text" name="stdName" id="stdName" [(ngModel)]="student.stdName" class="form-control" />
      GENDER :
      <input type="radio" name="stdGen" id="stdGen" [(ngModel)]="student.stdGen" value="Male" />
      Male
      <input type="radio" name="stdGen" id="stdGen" [(ngModel)]="student.stdGen" value="Female" />
      Female
      <br />
      COURSE : <select name="stdCourse" id="stdCourse" [(ngModel)]="student.stdCourse" class="form-control">
            <option value="JAVA">JAVA</option>
            <option value="DOT NET">DOT NET</option>
            <option value="DEVOPS">DEVOPS</option>
            <option value="SALESFORCE">SALESFORCE</option>
      </select>
      ADDRESS: <textarea name="stdAddr" id="stdAddr" [(ngModel)]="student.stdAddr" class="form-control"></textarea>
      <br/>
      <button type="submit" class="btn btn-success">ADD STUDENT</button>
</form>
<div class="text-center"><strong>{{message}}</strong></div>

===========================================================
----------------index.html---------------------------------
<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>StudentAngApp</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
    integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"
    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct"
    crossorigin="anonymous"></script>
</head>

<body>
  <app-root></app-root>
</body>

</html>
=============================================================